name: CI/CD Pipeline

on:
  # main/develop 브랜치에 푸시될 때
  push:
    branches: [main, develop]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean -x test build

      - name: Rename JAR for deployment
        run: cp build/libs/cherrydan-0.0.1-SNAPSHOT.jar app.jar

      # main 브랜치 푸시일 때 프로덕션 EC2로 배포
      - name: Deploy to Production EC2 (main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}
          EC2_HOST: ${{ secrets.EC2_HOST_PROD }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          echo "===== [PRODUCTION] JAR 파일 EC2로 배포 중... ====="
          scp -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i private_key.pem \
            app.jar ec2-user@${{ secrets.EC2_HOST_PROD }}:/home/ec2-user/
          
          ssh -o ConnectTimeout=10 -o BatchMode=yes -o StrictHostKeyChecking=no -i private_key.pem \
            ec2-user@${{ secrets.EC2_HOST_PROD }} << 'EOL'
          
          ./deploy.sh

          EOL
  
          rm -f private_key.pem
          echo "프로덕션 배포가 성공적으로 완료되었습니다!"

      # develop 브랜치 푸시일 때 개발 EC2로 배포
      - name: Configure AWS credentials for dev
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_DEV }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image to ECR
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: cherrydan-dev
          IMAGE_TAG: latest
        run: |
          echo "===== [DEVELOPMENT] Building and pushing Docker image ====="
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "이미지 푸시 완료: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Deploy to Development EC2
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_DEV }}
          EC2_HOST: ${{ secrets.EC2_HOST_DEV }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          echo "===== [DEVELOPMENT] Deploying to EC2 ====="
          ssh -o ConnectTimeout=10 -o BatchMode=yes -o StrictHostKeyChecking=no -i private_key.pem \
            ec2-user@${{ secrets.EC2_HOST_DEV }} << 'EOL'
          
          cd /home/ec2-user
          ./scripts/deploy-dev.sh

          EOL
  
          rm -f private_key.pem
          echo "개발 환경 배포가 성공적으로 완료되었습니다!"